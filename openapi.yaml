openapi: 3.0.3
info:
  title: Personal Travel App API (Single-User)
  description: API specification for a single-user travel planning app. All multi-user features are removed.
  version: 1.0.0

tags:
  - name: 1. Trips
    description: Endpoints for managing your trips.
  - name: 2. Spots
    description: Endpoints for managing "want-to-go" spots within a trip.

paths:
  # Category: 1. Trips
  # ----------------------------------------------------
  /api/trips:
    get:
      tags:
        - 1. Trips
      summary: Get all your trips
      description: Returns a list of all created trips.
      responses:
        "200": { description: A list of your trips. }
    post:
      tags:
        - 1. Trips
      summary: Create a new trip
      description: Creates a new trip.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "韓国旅行2025"
      responses:
        "201": { description: Trip created successfully. }
        "400": { description: Invalid input. }

  /api/trips/{tripId}:
    get:
      tags:
        - 1. Trips
      summary: Get trip details
      description: Returns the details of a specific trip.
      parameters:
        - { name: tripId, in: path, required: true, schema: { type: integer } }
      responses:
        "200": { description: Trip details. }
        "404": { description: Trip not found. }
    put:
      tags:
        - 1. Trips
      summary: Update trip details
      description: Updates the title of a specific trip.
      parameters:
        - { name: tripId, in: path, required: true, schema: { type: integer } }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string, example: "夏の韓国旅行" }
      responses:
        "200": { description: Trip updated successfully. }
        "404": { description: Trip not found. }

  # Category: 2. Spots
  # ----------------------------------------------------
  /api/trips/{tripId}/spots:
    get:
      tags:
        - 2. Spots
      summary: Get all spots for a trip
      description: Returns a list of "want-to-go" spots for a specific trip.
      parameters:
        - { name: tripId, in: path, required: true, schema: { type: integer } }
      responses:
        "200": { description: A list of spots. }
        "404": { description: Trip not found. }
    post:
      tags:
        - 2. Spots
      summary: Add a new spot to a trip
      description: Creates a new spot record associated with the trip.
      parameters:
        - { name: tripId, in: path, required: true, schema: { type: integer } }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string, example: "Gyeongbok Palace" }
                url:
                  {
                    type: string,
                    format: uri,
                    example: "https://maps.google.com/...",
                  }
                memo: { type: string, example: "Must-see historical site." }
      responses:
        "201": { description: Spot added successfully. }
        "400": { description: Invalid input. }

  /api/trips/{tripId}/spots/{spotId}:
    put:
      tags:
        - 2. Spots
      summary: Update a spot
      description: Updates the details of a specific spot.
      parameters:
        - { name: tripId, in: path, required: true, schema: { type: integer } }
        - { name: spotId, in: path, required: true, schema: { type: integer } }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                url: { type: string }
                memo: { type: string }
      responses:
        "200": { description: Spot updated successfully. }
        "404": { description: Spot or trip not found. }
    delete:
      tags:
        - 2. Spots
      summary: Delete a spot
      description: Deletes a specific spot from the list.
      parameters:
        - { name: tripId, in: path, required: true, schema: { type: integer } }
        - { name: spotId, in: path, required: true, schema: { type: integer } }
      responses:
        "204": { description: Spot deleted successfully. }
        "404": { description: Spot or trip not found. }
